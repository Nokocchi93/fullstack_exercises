{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","PersonForm","props","onSubmit","addPerson","value","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","deletePerson","map","p","name","number","onClick","id","Notification","notification","className","message","url","personService","getAll","axios","get","then","response","data","create","newObject","post","remove","idToDelete","delete","update","idToUpdate","put","App","useState","setPersons","setNewName","setNewNumber","filterString","setFilterString","setNotification","useEffect","notifyMessage","setTimeout","filteredPersons","filter","toLowerCase","includes","personsToShow","event","target","preventDefault","existingPerson","find","window","confirm","personToUpdate","updatedPerson","newPerson","createdPerson","concat","personToDelete","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a12899b9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ onChange }) => {\r\n    return (\r\n      <div>\r\n        filter shown with <input onChange={onChange} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.addPerson} >\r\n        <div>\r\n          name <input value={props.newName} onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n    return (\r\n      <div>\r\n          {persons.map(p => <p key={p.id}>\r\n            {p.name} - {p.number} - <button onClick={() => deletePerson(p.id)}>delete</button>\r\n          </p>)}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={notification.type}>\r\n        {notification.message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(url, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (idToDelete) => {\r\n    const request = axios.delete(`${url}/${idToDelete}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (idToUpdate, newObject) => {\r\n    const request = axios.put(`${url}/${idToUpdate}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst personService = { getAll, create, remove, update }\r\n\r\nexport default personService","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setFilterString ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(data => setPersons(data))\n  }, [])\n\n  const notifyMessage = (message, type=\"success\") => {\n    setNotification({ message, type })\n    setTimeout(() => setNotification(null), 3000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    const existingPerson = persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n    \n    if (existingPerson) {\n      const ok = window.confirm(`${existingPerson.name} is already added to the phonebook, replace the old number with a new one?`)\n\n      if (ok) {\n        const personToUpdate = { ...existingPerson, number: newNumber }\n        \n        personService.update(existingPerson.id, personToUpdate)\n          .then(updatedPerson => {\n            setPersons(persons.map(p => updatedPerson.id === p.id ? updatedPerson : p))\n            setNewName('')\n            setNewNumber('')\n            notifyMessage(`${updatedPerson.name} was successfully updated`)\n          })\n      }\n\n    } else {\n      const newPerson = {\n        name: newName, \n        number: newNumber,\n        // id: persons.length + 1\n      }\n\n      personService.create(newPerson)\n        .then(createdPerson => {\n          setPersons(persons.concat(createdPerson))\n          setNewName('')\n          setNewNumber('')\n          notifyMessage(`${createdPerson.name} was added to the phonebook`)\n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const personToDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${personToDelete.name}?`)\n    \n    if (ok) {\n      personService.remove(personToDelete.id)\n      .then(response => {\n        setPersons(persons.filter(p => p.id !== personToDelete.id))\n        notifyMessage(`${personToDelete.name} was successfully deleted`)\n      })\n      .catch(error => {\n        console.log(error)\n        setPersons(persons.filter(p => p.id !== personToDelete.id))\n        notifyMessage(`${personToDelete.name} was already deleted from the server`, 'error')\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterString(event.target.value)\n  }\n\n  const filteredPersons = \n    persons.filter(p => p.name.toLowerCase().includes(filterString.toLowerCase()))\n  const personsToShow = filterString ? filteredPersons : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter onChange={handleFilterChange} />\n      <h3>Add person</h3>\n      <PersonForm \n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}